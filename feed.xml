<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://aarontheadmin.github.io/</id><title>Aaron the Admin</title><subtitle>A simple blog documenting systems administration, PowerShell, and automating whatever moves, listens, or talks.</subtitle> <updated>2021-12-03T14:02:01-08:00</updated> <author> <name>Aaron Hardy</name> <uri>https://aarontheadmin.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://aarontheadmin.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://aarontheadmin.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2021 Aaron Hardy </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>The Straw That Broke The Scripts Block</title><link href="https://aarontheadmin.github.io/posts/The-Straw-That-Broke-The-Scripts-Block/" rel="alternate" type="text/html" title="The Straw That Broke The Scripts Block" /><published>2018-09-04T00:00:00-07:00</published> <updated>2018-09-04T00:00:00-07:00</updated> <id>https://aarontheadmin.github.io/posts/The-Straw-That-Broke-The-Scripts-Block/</id> <content src="https://aarontheadmin.github.io/posts/The-Straw-That-Broke-The-Scripts-Block/" /> <author> <name>Aaron Hardy</name> </author> <category term="PowerShell" /> <summary> This is a reminder to be mindful when copying and pasting code from an external source. I’ve been putting InjectionHunter to use and encountered “the straw that broke the camel’s back script’s block.” It shows how well designed this module is (thanks @Lee_Holmes!) Straw Script block part of the decrement operator -- a for() loop I deci... </summary> </entry> <entry><title>Converting Celsius to Fahrenheit Vice Versa</title><link href="https://aarontheadmin.github.io/posts/Converting-Celsius-to-Fahrenheit-Vice-Versa/" rel="alternate" type="text/html" title="Converting Celsius to Fahrenheit Vice Versa" /><published>2018-08-30T00:00:00-07:00</published> <updated>2018-08-30T00:00:00-07:00</updated> <id>https://aarontheadmin.github.io/posts/Converting-Celsius-to-Fahrenheit-Vice-Versa/</id> <content src="https://aarontheadmin.github.io/posts/Converting-Celsius-to-Fahrenheit-Vice-Versa/" /> <author> <name>Aaron Hardy</name> </author> <category term="PowerShell" /> <summary> There are a few ways to converting Celsius to Fahrenheit, vice-versa, but here is a simple, advanced function that can do it for you. Simply enter the known degrees in the -Value parameter then specify what you want to convert to: -Celsius or -Fahrenheit Convert-Temperature -Value 33 -Fahrenheit The example above would return 91.4 Fahrenheit based on the -Value 33. BEGIN {} Block This func... </summary> </entry> <entry><title>PowerShell Core Get TCP Connections on macOS</title><link href="https://aarontheadmin.github.io/posts/PowerShell-Core-Get-TCP-Connections-on-macOS/" rel="alternate" type="text/html" title="PowerShell Core Get TCP Connections on macOS" /><published>2018-07-09T00:00:00-07:00</published> <updated>2018-07-09T00:00:00-07:00</updated> <id>https://aarontheadmin.github.io/posts/PowerShell-Core-Get-TCP-Connections-on-macOS/</id> <content src="https://aarontheadmin.github.io/posts/PowerShell-Core-Get-TCP-Connections-on-macOS/" /> <author> <name>Aaron Hardy</name> </author> <category term="PowerShell" /> <summary> Getting active TCP connections can tell about what might be going on between applications and systems, and even help with network troubleshooting. As of PowerShell Core 6.0.2, there is no built-in cmdlet for getting TCP connections (unlike in Windows PowerShell - Get-NetTCPConnection) but with a little work, we can author our own function to get similar information on macOS. Scroll down to see... </summary> </entry> <entry><title>OpenSSH Remoting Broken After PowerShell Upgrade</title><link href="https://aarontheadmin.github.io/posts/OpenSSH-Remoting-Broken-After-PowerShell-Upgrade/" rel="alternate" type="text/html" title="OpenSSH Remoting Broken After PowerShell Upgrade" /><published>2018-06-05T00:00:00-07:00</published> <updated>2018-06-05T00:00:00-07:00</updated> <id>https://aarontheadmin.github.io/posts/OpenSSH-Remoting-Broken-After-PowerShell-Upgrade/</id> <content src="https://aarontheadmin.github.io/posts/OpenSSH-Remoting-Broken-After-PowerShell-Upgrade/" /> <author> <name>Aaron Hardy</name> </author> <category term="PowerShell" /> <summary> PowerShell Remoting in PowerShell Core has transformed the way Windows can communicate with other operating systems like Linux and macOS, and accomplish tasks using PowerShell and Bash as though you’re physically present on that disparate system. This has been accomplished by combining PowerShell Core and the Win32 port of OpenSSH. Because following the Microsoft Docs step-by-step does work (i... </summary> </entry> <entry><title>iTunes Cleanup Library and Music Media</title><link href="https://aarontheadmin.github.io/posts/iTunes-Cleanup-Library-and-Music-Media/" rel="alternate" type="text/html" title="iTunes Cleanup Library and Music Media" /><published>2018-05-18T00:00:00-07:00</published> <updated>2018-05-18T00:00:00-07:00</updated> <id>https://aarontheadmin.github.io/posts/iTunes-Cleanup-Library-and-Music-Media/</id> <content src="https://aarontheadmin.github.io/posts/iTunes-Cleanup-Library-and-Music-Media/" /> <author> <name>Aaron Hardy</name> </author> <category term="PowerShell" /> <summary> I’ve been writing a PowerShell module that handles the automation of live streaming on an iMac running macOS 10.13 using Wirecast, iTunes and some other tools. One of requirements is that the iTunes music library and any associated music media files are automatically deleted once iTunes has done its part. The use of iTunes for just anything is restricted in this environment, so deleting everyt... </summary> </entry> </feed>
